import 'package:dio/dio.dart';

class MoviesException implements Exception {
  MoviesException.fromDioError(DioError dioError) {
    switch (dioError.type) {
      case DioErrorType.CANCEL:
        message = "A solicitaÃ§Ã£o para o servidor API foi cancelada ğŸ˜°";
        break;
      case DioErrorType.CONNECT_TIMEOUT:
        message = "Tempo limite de conexÃ£o com servidor API ğŸ˜°";
        break;
      case DioErrorType.DEFAULT:
        message =
            "A conexÃ£o com o servidor API falhou devido Ã  conexÃ£o com a Internet ğŸ˜°";
        break;
      case DioErrorType.RECEIVE_TIMEOUT:
        message = "Tempo limite de espera em conexÃ£o com o servidor API ğŸ˜°";
        break;
      case DioErrorType.RESPONSE:
        message = _handleError(dioError.response.statusCode);
        break;
      case DioErrorType.SEND_TIMEOUT:
        message = "Tempo limite de envio em conexÃ£o com o servidor API ğŸ˜°";
        break;
      default:
        message = "Algo deu errado ğŸ˜°";
        break;
    }
  }

  String message;

  String _handleError(int statusCode) {
    switch (statusCode) {
      case 400:
        return 'RequisiÃ§Ã£o mal formada ğŸ˜°';
      case 404:
        return 'O recurso solicitado nÃ£o foi encontrado ğŸ˜°';
      case 500:
        return 'Erro interno no servidor ğŸ˜°';
      default:
        return 'Ops, algo deu errado ğŸ˜°';
    }
  }

  @override
  String toString() => message;
}
